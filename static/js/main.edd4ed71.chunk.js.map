{"version":3,"sources":["table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","getKeys","undefined","this","data","getHeader","map","key","index","toUpperCase","getRowsData","items","keys","row","bind","type","placeholder","className","onChange","e","filter","checked","enableStateFilter","enableState","style","marginLeft","enablegenerFilter","enableGener","length","colSpan","id","pagination","number","color","currentpage","onClick","pageClick","React","Component","RenderRow","App","handleClick","event","setState","currentPage","Number","target","value","state","genre","restaurantData","restaurant","includes","filterData","filterRestaurent","recordsperPage","fetch","headers","Authorization","then","res","json","result","sort","a","b","name","indexOfLastRecord","indexOfFirstRecord","currentTodos","slice","pageNumbers","i","Math","ceil","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edd4ed71.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getHeader = this.getHeader.bind(this);\r\n    this.getRowsData = this.getRowsData.bind(this);\r\n    this.getKeys = this.getKeys.bind(this);\r\n  }\r\n\r\n  getKeys = function () {\r\n    if (this.props.data !== undefined) {\r\n      return [\"name\", \"city\", \"state\", \"telephone\", \"genre\"];\r\n    }\r\n  };\r\n\r\n  getHeader = function () {\r\n    var keys = this.getKeys() || [];\r\n    return keys.map((key, index) => {\r\n      return <th key={key}>{key.toUpperCase()}</th>;\r\n    });\r\n  };\r\n\r\n  getRowsData = function () {\r\n    let items = this.props.data;\r\n\r\n    let keys = this.getKeys() || [];\r\n    return items.map((row, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <RenderRow key={index} data={row} keys={keys} />\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"filter by state\"\r\n          className=\"textboxes\"\r\n          onChange={(e) => {\r\n            this.props.filter(e, \"state\");\r\n          }}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={this.props.enableStateFilter}\r\n          onChange={() => this.props.enableState(!this.props.enableStateFilter)}\r\n        />\r\n        Enable state Search\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"filter by genre\"\r\n          className=\"textboxes\"\r\n          style={{ marginLeft: \"30px\" }}\r\n          onChange={(e) => {\r\n            this.props.filter(e, \"genre\");\r\n          }}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={this.props.enablegenerFilter}\r\n          onChange={() => this.props.enableGener(!this.props.enablegenerFilter)}\r\n        />\r\n        Enable genre Search\r\n        <table>\r\n          <thead>\r\n            <tr>{this.getHeader()}</tr>\r\n          </thead>\r\n          {this.props.data.length > 0 ? (\r\n            <tbody>{this.getRowsData()}</tbody>\r\n          ) : (\r\n            <tbody>\r\n              <td colSpan={5}>No Data</td>\r\n            </tbody>\r\n          )}\r\n          <td colSpan={5}>\r\n            <ul id=\"page-numbers\">\r\n              {this.props.pagination.map((number) => {\r\n                return (\r\n                  <li style={{color:number===this.props.currentpage?\"red\":null}} key={number} id={number} onClick={this.props.pageClick}>\r\n                    {number}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </td>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RenderRow = (props) => {\r\n  return props.keys.map((key, index) => {\r\n    return <td key={props.data[key]}>{props.data[key]}</td>;\r\n  });\r\n};\r\n","import React from \"react\";\n\nimport Table from \"./table\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      genre: \"\",\n      state: \"\",\n      currentPage: 1,\n      recordsperPage: 10,\n      enablegenerFilter:true,\n      enableStateFilter:true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://code-challenge.spectrumtoolbox.com/api/restaurants\", {\n      headers: {\n        Authorization: \"Api-Key q3MNxtfep8Gt\",\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        result.sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\n\n        this.setState({ restaurantData: result, filterData: result });\n      });\n  }\n\n  handleClick = (event) => {\n    this.setState({\n      currentPage: Number(event.target.id),\n    });\n  };\n\n  enableState = (value) => {\n    this.setState({enableStateFilter:value},()=>{\n      let { genre, state,enableStateFilter } = this.state;\n      let restaurantData = [...this.state.restaurantData];\n      if(!enableStateFilter){\n        state=\"\"\n      }\n      let data = restaurantData.filter((restaurant) => {\n        return (\n          restaurant.state.toUpperCase().includes(state) &&\n          restaurant.genre.toUpperCase().includes(genre)\n        );\n      });\n      this.setState({ filterData: data ,currentPage:1});\n\n    })\n  }\n  enableGener =(value) =>{\n    this.setState({enablegenerFilter:value},()=>{\n      let { genre, state,enablegenerFilter } = this.state;\n      let restaurantData = [...this.state.restaurantData];\n      if(!enablegenerFilter){\n        genre=\"\"\n      }\n      let data = restaurantData.filter((restaurant) => {\n        return (\n          restaurant.state.toUpperCase().includes(state) &&\n          restaurant.genre.toUpperCase().includes(genre)\n        );\n      });\n      this.setState({ filterData: data ,currentPage:1});\n\n    })\n  }\n\n  filterRestaurent = (e, type) => {\n    this.setState({ [type]: e.target.value.toUpperCase() }, () => {\n      let { genre, state } = this.state;\n      let restaurantData = [...this.state.restaurantData];\n\n      let data = restaurantData.filter((restaurant) => {\n        return (\n          restaurant.state.toUpperCase().includes(state) &&\n          restaurant.genre.toUpperCase().includes(genre)\n        );\n      });\n      this.setState({ filterData: data ,currentPage:1});\n    });\n  };\n\n  render() {\n    const { filterData = [], recordsperPage, currentPage } = this.state;\n    const indexOfLastRecord = currentPage * recordsperPage;\n    const indexOfFirstRecord = indexOfLastRecord - recordsperPage;\n    const currentTodos = filterData.slice(\n      indexOfFirstRecord,\n      indexOfLastRecord\n    );\n\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(filterData.length / recordsperPage); i++) {\n      pageNumbers.push(i);\n    }\n    return (\n      <Table\n        data={currentTodos || []}\n        pagination={pageNumbers}\n        filter={this.filterRestaurent}\n        pageClick={this.handleClick}\n        enableStateFilter={this.state.enableStateFilter}\n        enableState={this.enableState}\n        enablegenerFilter= {this.state.enablegenerFilter}\n        enableGener={this.enableGener}\n        currentpage={this.state.currentPage}\n        />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}